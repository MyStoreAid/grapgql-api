type Query {

    #Appointment
    appointments: [Appointment!]!
    appointment(id: ID!): Appointment
    
    #App Notification
    appNotifications: [AppNotification!]!
    appNotification(id: ID!): AppNotification!

    #Audit
    audits: [Audit!]!
    audit(id: ID!): Audit


    #Brand
    brands: [Brand!]!
    brand(id: ID!): Brand

    #Branch
    branches: [Branch!]!
    branch(id: ID!): Branch

    #Branch User Group
    branchUserGroups: [BranchUserGroup!]!
    branchUserGroup(id: ID): BranchUserGroup
    
    #Business Category
    businessCategories: [BusinessCategory!]!
    businessCategory(id: ID!): BusinessCategory

    #Branch Goals
    branchGoals: [BranchGoal!]!
    branchGoal(id: ID!): BranchGoal!

    #Company
    companies: [Company!]!
    company(id: ID!): Company!

    #Client
    clients: [Client!]!
    client(name: String!): Client

    #Customer
    customers: [Customer!]!
    customer(id: ID!): Customer

    #Feature
    features: [Feature!]!
    feature(id: ID!): Feature

    #Internal Business Category
    internalBusinessCategory(id: ID!): InternalBusinessCategory
    internalBusinessCategories: [InternalBusinessCategory!]!

    #Manufactures
    manufacturers: [Manufacturer!]!
    manufacturer(id: ID!): Manufacturer

    #Measurement Units
    measurementUnits: [MeasurementUnit!]!
    measurementUnit(id: ID!): MeasurementUnit

    #Permission
    permissions: [Permission!]!
    permission(id: ID!): Permission

    #Product
    products: [Product!]!
    product(id: ID!): Product

    #Product Description
    productDescriptions: [ProductDescription!]!
    productDescription(id: ID!): ProductDescription!

    #Product Category
    productCategories: [ProductCategory!]!
    productCategory(id: ID!): ProductCategory!

    #Role
    roles: [Role!]!
    role(id: ID!): Role

    #Suscription
    subscriptions: [Subscription!]!
    subscription(id : ID!): Subscription

    #Product Segment
    productSegments: [ProductSegment!]!
    productSegment(id: ID!): ProductSegment!

    #Product Segment Entry
    productSegmentEntries: [ProductSegmentEntry!]!
    productSegmentEntry(id: ID!): ProductSegmentEntry!

    #Sale
    sales: [Sale!]!
    sale(id: ID!): Sale

    #User
    users: [User!]!
}

type Mutation {

    #Appointment
    createAppointment(type: String, status: String, createdById: String, lastModifiedById: String, assignedToId: String, request: String): Appointment!
    updateAppointment(id: ID!, type: String, status: String, lastModifiedById: String, assignedToId: String, request: String): Appointment!
    deleteAppointment(id: ID!): Appointment!

     #App Notfication
    createAppNotification(title: String!, message: String!, actionMessage: String, actionPath: String, operation: String, cron: String): AppNotification!
    updateAppNotification(id: ID!, title: String, message: String, actionMessage: String, actionPath: String, active: Boolean, operation: String, cron: String): AppNotification!
    deleteAppNotification(id: ID!): AppNotification!

    #Audit
    createAudit(status: String, branchId: String!,  createdById: String, isActive: Boolean, auditDate: Float, status: String, lastModifiedById: String, auditEntryIds: [String], branchProductStockIds: [String], saleIds: [String]): Audit!
    updateAudit(id: ID!, branchId: String, status: String, createdById: String, isActive: Boolean, auditDate: Float, status: String, lastModifiedById: String, auditEntryIds: [String], branchProductStockIds: [String], saleIds: [String]): Audit!
    deleteAudit(id: ID!): Audit!


    #Branch
    createBranch(name: String!, startDate: Float, address: String, location: String!, logo: String, whatsAppPhone: String, type: String, action: String, syncInterval: Float, gps: String, latitude: Float, longitude: Float, country: String, region: String, city: String, workingDays: String, sourcesOfPurchases: String, phoneType: String, otherServices: String, locationType: String, storeImage: String, serviceType: String, buildingStructures: String, coolerBrands: String, coolerTypes: String, electricity: String, yearOfEstablishment: Float, appointmentId: String, branchUserGroupId: String, businessCategoryId: String, companyId: String, userId: String): Branch!
    updateBranch(id: ID, name: String!, startDate: Float, address: String, checkoutSales: Boolean, aggregateSales: Boolean, alwaysSync: Boolean, forTesting: Boolean, supplierStock: Boolean,location: String, logo: String, whatsAppPhone: String, type: String, action: String, syncInterval: Float, gps: String, latitude: Float, longitude: Float, country: String, region: String, city: String, workingDays: String, sourcesOfPurchases: String, phoneType: String, otherServices: String, locationType: String, storeImage: String, serviceType: String, buildingStructures: String, coolerBrands: String, coolerTypes: String, electricity: String, yearOfEstablishment: Float, appointmentId: String, branchUserGroupId: String, businessCategoryId: String, companyId: String, userId: String): Branch!
    deleteBranch(id: ID): Branch!
  

    
    #Branch User Group
    createBranchUserGroup(name: String!, description: String): BranchUserGroup!
    updateBranchUserGroup(id: ID!, name: String, description: String): BranchUserGroup!
    deleteBranchUserGroup(id: ID!): BranchUserGroup!



    #Brand
    createBrand(name: String!): Brand!
    updateBrand(id: ID!, name: String!): Brand!
    deleteBrand(id: ID!): Brand!

    
    #Business Category
    createBusinessCategory(name: String!, description: String): BusinessCategory!
    updateBusinessCategory(id: ID!, name: String, description: String): BusinessCategory!
    deleteBusinessCategory(id: ID!): BusinessCategory!

    #Branch Goals
    createBranchGoal(name: String!, position: Float!): BranchGoal!
    updateBranchGoal(id: ID!, name: String, position: Float, active: Boolean): BranchGoal!
    deleteBranchGoal(id: ID!): BranchGoal!

   

    #Client
    createClient(name:String!, displayName: String): Client!
    updateClient(name: String!, displayName: String!): Client!
    deleteClient(name: String!): Client!

    #Company
    createCompany(name: String!, businessCategoryId: String, subscriptionId: String, email: String, phone: String, internalBusinessCategoryId: String, adminLastModifiedBy: String, lastSyncBy: String ): Company!
    updateCompany(id: ID!, name: String, adminLastModifiedBy: String, lastSyncBy: String ): Company!
    deleteCompany(id: ID!): Company!

    #Customer
    createCustomer(firstName: String!, otherNames: String, phone: String!, email: String, location: String, isTemporary: Boolean, type: String, createdById: String, lastModifiedById: String, BranchesCustomerIds: [String], SalesEntryIds: [String], SaleInstallmentIds: String ): Customer!
    updateCustomer(id: ID!, firstName: String!, otherNames: String, phone: String, email: String, location: String, isTemporary: Boolean, type: String, createdById: String, lastModifiedById: String, BranchesCustomerIds: [String], SalesEntryIds: [String], SaleInstallmentIds: String ): Customer!
    deleteCustomer(id: ID!): Customer!

 


    #Features
    createFeature(name:String!, description: String): Feature!
    updateFeature(id: ID!, name:String, description: String): Feature!
    deleteFeature(id: ID!): Feature!

    #Internal Business Categories
    createInternalBusinessCategory(name: String, description: String): InternalBusinessCategory!
    updateInternalBusinessCategory(id: ID!, name: String, description: String): InternalBusinessCategory!
    deleteInternalBusinessCategory(id: ID!): InternalBusinessCategory!

    #Manufacturer
    createManufacturer(name: String!): Manufacturer!
    updateManufacturer(id: ID!, name: String!): Manufacturer!
    deleteManufacturer(id: ID!): Manufacturer!

    #Measurement Units
    createMeasurementUnit(name: String!, symbol: String!): MeasurementUnit!
    updateMeasurementUnit(id: ID!, name: String, symbol: String): MeasurementUnit!
    deleteMeasurementUnit(id: ID!): MeasurementUnit!

    #Permissions
    createPermission(name: String!, description: String): Permission!
    updatePermission(id: ID!, name: String, description: String): Permission!
    deletePermission(id: ID!): Permission!

    #Product
    createProduct(name: String!, description: String, summary: String, barCode: String, manufacturerId: String, brandId: String, productCategoryId: String, productSegmentId: String, measuerementUnitId: String, weight: Float, image: String, adminLastModifiedBy: String, lastModifiedBy: String): Product!
    updateProduct(id: ID, name: String!, description: String, summary: String, barCode: String,  weight: Float, image: String, adminLastModifiedBy: String, lastModifiedBy: String): Product!
    deleteProduct(id: ID!): Product!
    

    #Product Category
    createProductCategory(name: String!, summary: String): ProductCategory!
    updateProductCategory(id: ID!, name: String, summary: String): ProductCategory!
    deleteProductCategory(id: ID!): ProductCategory!

    #Product Description
    createProductDescription(name: String!, summary: String): ProductDescription!
    updateProductDescription(id: ID!, name: String, summary: String): ProductDescription!
    deleteProductDescription(id: ID!): ProductDescription!

    #Product Segment
    createProductSegment(name: String!, description: String): ProductSegment!
    updateProductSegment(id: ID!, name: String, description: String): ProductSegment!
    deleteProductSegment(id: ID!): ProductSegment!

    #Product Segment Entry
    createProductSegmentEntry(name: String!, productSegmentId: String!): ProductSegmentEntry!
    updateProductSegmentEntry(id: ID!, name: String!): ProductSegmentEntry!
    deleteProductSegmentEntry(id: ID!): ProductSegmentEntry!

    #Sale
    createSale(note: String, paymentStatus: String, discount: Float, receiptNumber: String, type: String, paymentType: String, auditId: String, branchId: String!, createdById: String!, customerId: String!, lastModifiedById: String): Sale!
    updateSale(id: ID!, note: String, paymentStatus: String, discount: Float, salesDate: Float, receiptNumber: String, type: String, paymentType: String, auditId: String, branchId: String, createdById: String, customerId: String, lastModifiedById: String): Sale!
    deleteSale(id: ID!): Sale!

  
    #Role
    createRole(name: String!, description: String): Role!
    updateRole(id: ID!, name: String, description: String): Role!
    deleteRole(id: ID!): Role!

    
    #Subscription
    createSubscription(name: String!, description: String, numberOfBranches: Float!, companiesId: ID): Subscription!
    updateSubscription(id: ID!, name: String!, description: String, numberOfBranches: Float): Subscription!
    deleteSubscription(id: ID!): Subscription!
    #User
    registerUser(phone: String!, country: String!, otp: String, email: String, callingCode: String!, username: String, status: String, password: String): User
    loginUser(username: String!, password: String): LoginResponse!
}

    

type GPS {
  latitude: Float
  longitude: Float
}

type Appointment {
    id: ID!
    type: String
    status: String
    users_appointments_createdByTousers: User 
    created_at: Float
    updated_at: Float
    server_created_at: Float
    users_appointments_lastModifiedByTousers: User
    request: String
    users_appointments_assignedToTousers: User
    deleted: Boolean!
}

type AppNotification {
    id: ID!
    title: String!
    message: String!
    actionMessage: String
    actionPath: String
    active: Boolean!
    operation: String
    cron: String
    created_at: Float
    updated_at: Float
    deleted: Boolean!
}

type Audit {
  id: ID!
  branches: Branch
  users_audits_createdByTousers: User
  isActive: Boolean
  auditDate: Float
  status: String
  users_audits_lastModifiedByTousers: User
  # audit_entries: [AuditEntry]
  # branches_products_stocks: [BusinessProductStock]
  # sales: [Sale]
  last_modified: Float
  server_created_at: Float
  created_at: Float
  updated_at: Float
  deleted: Boolean!
}

type Branch{
  id: ID! 
  name: String!
  startDate: Float
  address: String
  location: String
  logo: String
  phone: String
  whatsAppPhone: String
  type: String
  checkoutSales: Boolean
  aggregateSales: Boolean
  action: String
  syncInterval: Float
  alwaysSync: Boolean
  forTesting: Boolean
  gps: String
  latitude: Float
  longitude: Float
  country: String
  region: String
  city: String
  supplierStock: Boolean
  workingDays: String
  sourcesOfPurchases: String
  phoneType: String
  otherServices: String
  locationType: String
  storeImage: String
  serviceType: String
  buildingStructure:String
  coolerBrands: String
  coolerTypes: String
  electricity: String
  yearOfEstablishment: Float
  appointments: Appointment
  branch_user_groups: BranchUserGroup
  business_categories: BusinessCategory
  companies: Company
  users: User
  # audit_entries: AuditEntry
  # branch_product_selling_prices: BranchProductSellingPrice
  audits: [Audit]
  # branch_purchases: BranchPurchase
  # branch_supplier_order_payment_installments: BranchSupplierOrderPaymentInstallment
  # branch_supplier_orders: [BranchSupplierOrder]
  # branch_supplier_products: [BranchSupplierProduct]
  # branch_supplier_salespersons: [BranchSupplierSaleperson]                  
  # branch_supplier_stocks: [BranchSupplierStock]
  # branch_suppliers: [BranchSupplier]
  # branches_customers: [BranchesCustomer]
  # branches_products: [BranchesProduct]
  # branches_products_stock_movements_branchesTobranches_products_stock_movements_branchFrom: [BranchesProductsStockMovement]          
  # branches_products_stock_movements_branchesTobranches_products_stock_movements_branchTo:   [BranchesProductsStockMovements]         
  # branches_products_stocks: [BranchesProductStock]
  # branches_products_stocks_histories: [BranchesProductsStocksHistory]
  # cashflows: [Cashflow]
  # customer_care_schedules: [CustomerCareSchedule]
  # payment_histories: [PaymentHistory]
  # reconciliation_histories: [ReconcilationHistory]
  # reconciliations: [Reconciliation]
  # sale_entries: [SaleEntry]
  # sale_installments: [SaleInstallment]
  # sale_return_histories: [SaleReturnHistory]
  # sales: [Sale]
  # stock_return_histories: [StockReturnHistory]
  created_at: Float
  updated_at: Float
  deleted: Boolean
}






type BranchGoal {
    id: ID!
    name: String!
    active: Boolean
    position: Float
    created_at: Float
    updated_at: Float
    last_modified: Float
    server_created_at: Float
    deleted: Boolean!
}

type BranchUserGroup {
  id: ID! 
  name: String!
  description: String
  created_at: Float
  updated_at: Float
  deleted: Boolean
}

type Brand {
    id: ID!
    name: String!
    created_at: Float
    updated_at: Float
    last_modified: Float
    server_created_at: Float
    deleted: Boolean!
}



type BusinessCategory {
  id: ID! 
  name: String!
  description: String
  created_at: Float
  updated_at: Float
  deleted: Boolean
}

type Company{
  id: ID!
  name: String!
  businessCategory: BusinessCategory
  subscription: Subscription
  email: String
  phone: String
  internalBusinessCategory: InternalBusinessCategory
  adminLastModifiedBy: String
  lastModifiedBy: User
  lastSyncBy: User
  created_at: Float
  updated_at: Float
  lastSyncAt: Float
  deleted: Boolean
  # branches: [Branch]
  # companiesSubscriptions: [CompaniesSubscription]
  # companiesSyncHistories: [CompaniesSyncHistory]
  # customerCareSchedules: [CustomerCareSchedule]
  # userBranches: [UserBranch]
  # userCompanies: [UserCompany]
}
 

type Client{
  name: String!
  displayName: String
  created_at: Float
  updated_at: Float
  lastSyncAt: Float
  deleted: Boolean
}

type Company{
  id: ID!
  name: String!
  business_categories: BusinessCategory!
  subscriptions: Subscription
  email: String
  phone: String
  internalBusinessCategory: InternalBusinessCategory
  adminLastModifiedBy: String
  lastModifiedBy: User
  lastSyncBy: User
  created_at: Float
  updated_at: Float
  lastSyncAt: Float
  deleted: Boolean
  # branches: [Branch]
  # companiesSubscriptions: [CompaniesSubscription]
  # companiesSyncHistories: [CompaniesSyncHistory]
  # customerCareSchedules: [CustomerCareSchedule]
  # userBranches: [UserBranch]
  # userCompanies: [UserCompany]
}

type Customer {
  id: ID! 
  firstName: String!
  otherNames: String
  phone: String
  email: String
  location: String
  isTemporary: Boolean
  type: String
  users_customers_createdByTousers: User
  users_customers_lastModifiedByTousers: User
  # branches_customers: [BranchesCustomer]
  # sale_entries: [SaleEntry]
  # sale_installments: [SaleInstallment]
  sales: [Sale]
  created_at: Float
  updated_at: Float
  server_created_at: Float
  last_modified: Float
  deleted: Boolean
}


type Feature {
  id: ID! 
  name: String!
  description: String
  created_at: Float
  updated_at: Float
  deleted: Boolean
}


type InternalBusinessCategory {
  id: ID! 
  name: String!
  description: String
  created_at: Float
  updated_at: Float
  deleted: Boolean
}

type Json{
  id: ID!
}

type Manufacturer {
    id: ID!
    name: String!
    created_at: Float
    updated_at: Float
    isTemporary: Boolean
    last_modified: Float
    server_created_at: Float
    deleted: Boolean!
}

type MeasurementUnit {
    id: ID!
    name: String!
    symbol: String!
    created_at: Float
    updated_at: Float
    last_modified: Float
    server_created_at: Float
    deleted: Boolean!
}

type Permission {
  id: ID! 
  name: String!
  description: String
  created_at: Float
  updated_at: Float
  deleted: Boolean
}

type Product {
    id: ID!
    name: String!
    description: String
    summary: String
    barCode: String
    manufacturer: Manufacturer 
    brand: Brand
    productCategory: ProductCategory
    productSegment: ProductSegment
    measuerementUnit: MeasurementUnit
    weight: Float
    image: String
    isTemporary: Boolean
    adminLastModifiedBy: String
    lastModifiedBy: User
    created_at: Float
    updated_at: Float
    last_modified: Float
    server_created_at: Float
    deleted: Boolean!
}


type ProductCategory {
    id: ID!
    name: String!
    summary: String
    parentId: ID
    measurementUnitId: ID
    created_at: Float
    updated_at: Float
    last_modified: Float
    server_created_at: Float
    deleted: Boolean!
}


type ProductDescription {
  id: ID! 
  name: String!
  summary: String
  created_at: Float
  updated_at: Float
  last_modified: Float
  server_created_at: Float
  deleted: Boolean
}

type ProductSegment {
  id: ID! 
  name: String!
  description: String
  created_at: Float
  updated_at: Float
  last_modified: Float
  server_created_at: Float
  deleted: Boolean
}


type ProductSegmentEntry {
  id: ID! 
  name: String!
  product_segments: ProductSegment
  created_at: Float
  updated_at: Float
  last_modified: Float
  server_created_at: Float
  deleted: Boolean
}



type Role {
    id: ID! 
    name: String!
    description: String
    created_at: Float
    updated_at: Float
    deleted: Boolean
}

type Sale {
    id: ID! 
    note: String!
    paymentStatus: String
    discount: Float
    salesDate: Float
    receiptNumber: String
    type: String
    paymentType: String
    audits: Audit
    branches: Branch
    users_sales_createdByTousers: User
    customers: Customer
    users_sales_lastModifiedByTousers: User
    # sale_entries: [SaleEntry]
    # sale_installments: [SaleInstallment]
    # sale_return_histories: SaleReturnHistory
    created_at: Float
    updated_at: Float
    last_modified: Float
    server_created_at: Float
    deleted: Boolean

}



type Subscription {
    id: ID! 
    name: String!
    description: String
    numberOfBranches: Float
    created_at: Float
    updated_at: Float
    deleted: Boolean
    companies: [Company!]
}



type User {
    userId: ID! 
    email: String!
    # password: String!
    firstName: String!
    otherNames: String
    phone: String!
    username: String
    geneder: String
    whatsAppPhone: String
    status: String
    otp: String
    isCustomerCarePersonnel: Boolean
    isSupervisor: Boolean
    adminLastModifiedBy: String
    lastModifiedBy: String
    country: String
    languagesSpoken: String
    logins: Float
    lastLogin: Float
    isRecruiter: Boolean
    server_created_at: Float
    last_modified: Float
    created_at: Float
    updated_at: Float
    deleted: Boolean
}

type LoginResponse {
  token: String!,
  access: [Company]
}