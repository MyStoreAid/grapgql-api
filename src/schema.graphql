type Query {
    #Branch User Group
    branchUserGroups: [BranchUserGroup!]!
    branchUserGroup(id: ID): BranchUserGroup
    
    #App Notification
    appNotifications: [AppNotification!]!
    appNotification(id: ID!): AppNotification!


    #Brand
    brands: [Brand!]!
    brand(id: ID!): Brand

    #Internal Business Category
    internalBusinessCategory(id: ID!): InternalBusinessCategory
    internalBusinessCategories: [InternalBusinessCategory!]!
    
    #Business Category
    businessCategories: [BusinessCategory!]!
    businessCategory(id: ID!): BusinessCategory

    #Branch Goals
    branchGoals: [BranchGoal!]!
    branchGoal(id: ID!): BranchGoal!

    #Company
    companies: [Company!]!
    company(id: ID!): Company!

    #Client
    clients: [Client!]!
    client(name: String!): Client

    #Feature
    features: [Feature!]!
    feature(id: ID!): Feature

    #Manufactures
    manufacturers: [Manufacturer!]!
    manufacturer(id: ID!): Manufacturer

    #Measurement Units
    measurementUnits: [MeasurementUnit!]!
    measurementUnit(id: ID!): MeasurementUnit

    #Roles
    roles: [Role!]!
    role(id: ID!): Role

    #Permission
    permissions: [Permission!]!
    permission(id: ID!): Permission

    #Product
    products: [Product!]!
    product(id: ID!): Product

    #Product Category
    productCategories: [ProductCategory!]!
    productCategory(id: ID!): ProductCategory!

    #Product Description
    productDescriptions: [ProductDescription!]!
    productDescription(id: ID!): ProductDescription!

    #Product Segment
    productSegments: [ProductSegment!]!
    productSegment(id: ID!): ProductSegment!

    #Product Segment Entry
    productSegmentEntries: [ProductSegmentEntry!]!
    productSegmentEntry(id: ID!): ProductSegmentEntry!

    
}

type Mutation {
    #Branch User Group
    createBranchUserGroup(name: String!, description: String): BranchUserGroup!
    updateBranchUserGroup(id: ID!, name: String, description: String): BranchUserGroup!
    deleteBranchUserGroup(id: ID!): BranchUserGroup!


    #App Notfication
    createAppNotification(title: String!, message: String!, actionMessage: String, actionPath: String, operation: String, cron: String): AppNotification!
    updateAppNotification(id: ID!, title: String, message: String, actionMessage: String, actionPath: String, active: Boolean, operation: String, cron: String): AppNotification!
    deleteAppNotification(id: ID!): AppNotification!

    #Brand
    createBrand(name: String!): Brand!
    updateBrand(id: ID!, name: String!): Brand!
    deleteBrand(id: ID!): Brand!

    

    #Internal Business Categories
    createInternalBusinessCategory(name: String, description: String): InternalBusinessCategory!
    updateInternalBusinessCategory(id: ID!, name: String, description: String): InternalBusinessCategory!
    deleteInternalBusinessCategory(id: ID!): InternalBusinessCategory!

    #Business Category
    createBusinessCategory(name: String!, description: String): BusinessCategory!
    updateBusinessCategory(id: ID!, name: String, description: String): BusinessCategory!
    deleteBusinessCategory(id: ID!): BusinessCategory!

    #Branch Goals
    createBranchGoal(name: String!, position: Float!): BranchGoal!
    updateBranchGoal(id: ID!, name: String, position: Float, active: Boolean): BranchGoal!
    deleteBranchGoal(id: ID!): BranchGoal!

    #Manufacturer
    createManufacturer(name: String!): Manufacturer!
    updateManufacturer(id: ID!, name: String!): Manufacturer!
    deleteManufacturer(id: ID!): Manufacturer!

    #Client
    createClient(name:String!, displayName: String): Client!
    updateClient(name: String!, displayName: String!): Client!
    deleteClient(name: String!): Client!

    #Company
    createCompany(name: String!, businessCategoryId: String, subscriptionId: String, email: String, phone: String, internalBusinessCategoryId: String, adminLastModifiedBy: String, lastSyncBy: String ): Company!
    updateCompany(id: ID!, name: String, adminLastModifiedBy: String, lastSyncBy: String ): Company!
    deleteCompany(id: ID!): Company!


    #Features
    createFeature(name:String!, description: String): Feature!
    updateFeature(id: ID!, name:String, description: String): Feature!
    deleteFeature(id: ID!): Feature!

    #Measurement Units
    createMeasurementUnit(name: String!, symbol: String!): MeasurementUnit!
    updateMeasurementUnit(id: ID!, name: String, symbol: String): MeasurementUnit!
    deleteMeasurementUnit(id: ID!): MeasurementUnit!

    #Permissions
    createPermission(name: String!, description: String): Permission!
    updatePermission(id: ID!, name: String, description: String): Permission!
    deletePermission(id: ID!): Permission!

    #Product
    createProduct(name: String!, description: String, summary: String, barCode: String, manufacturerId: String, brandId: String, productCategoryId: String, productSegmentId: String, measuerementUnitId: String, weight: Float, image: String, adminLastModifiedBy: String, lastModifiedBy: String): Product!
    updateProduct(id: ID, name: String!, description: String, summary: String, barCode: String,  weight: Float, image: String, adminLastModifiedBy: String, lastModifiedBy: String): Product!
    deleteProduct(id: ID!): Product!
    

    #Product Category
    createProductCategory(name: String!, summary: String): ProductCategory!
    updateProductCategory(id: ID!, name: String, summary: String): ProductCategory!
    deleteProductCategory(id: ID!): ProductCategory!

    #Product Description
    createProductDescription(name: String!, summary: String): ProductDescription!
    updateProductDescription(id: ID!, name: String, summary: String): ProductDescription!
    deleteProductDescription(id: ID!): ProductDescription!

    #Product Segment
    createProductSegment(name: String!, description: String): ProductSegment!
    updateProductSegment(id: ID!, name: String, description: String): ProductSegment!
    deleteProductSegment(id: ID!): ProductSegment!

    #Product Segment Entry
    createProductSegmentEntry(name: String!, productSegmentId: String!): ProductSegmentEntry!
    updateProductSegmentEntry(id: ID!, name: String!): ProductSegmentEntry!
    deleteProductSegmentEntry(id: ID!): ProductSegmentEntry!

    #Product Category Product Segment
    createProductCategoryProductSegment(productCategoryId: String, productSegmentId: String): ProductCategoryProductSegment!
    

    #Role
    createRole(name: String!, description: String): Role!
    updateRole(id: ID!, name: String, description: String): Role!
    deleteRole(id: ID!): Role!

    
}

type AppNotification {
    id: ID!
    title: String!
    message: String!
    actionMessage: String
    actionPath: String
    active: Boolean!,
    operation: String,
    cron: String,
    created_at: Float
    updated_at: Float
    deleted: Boolean!
}

type BranchGoal {
    id: ID!
    name: String!
    active: Boolean
    position: Float
    created_at: Float
    updated_at: Float
    last_modified: Float
    server_created_at: Float
    deleted: Boolean!
}

type BranchUserGroup {
  id: ID! 
  name: String!
  description: String
  created_at: Float
  updated_at: Float
  deleted: Boolean
}

type Brand {
    id: ID!
    name: String!
    created_at: Float
    updated_at: Float
    last_modified: Float
    server_created_at: Float
    deleted: Boolean!
}



type BusinessCategory {
  id: ID! 
  name: String!
  description: String
  created_at: Float
  updated_at: Float
  deleted: Boolean
}

type Client{
  name: String!
  displayName: String
  created_at: Float
  updated_at: Float
  lastSyncAt: Float
  deleted: Boolean
}

type Company{
  id: ID!
  name: String!
  businessCategory: BusinessCategory
  subscription: Subscription
  email: String
  phone: String
  internalBusinessCategory: InternalBusinessCategory
  adminLastModifiedBy: String
  lastModifiedBy: User
  lastSyncBy: User
  created_at: Float
  updated_at: Float
  lastSyncAt: Float
  deleted: Boolean
  # branches: [Branch]
  # companiesSubscriptions: [CompaniesSubscription]
  # companiesSyncHistories: [CompaniesSyncHistory]
  # customerCareSchedules: [CustomerCareSchedule]
  # userBranches: [UserBranch]
  # userCompanies: [UserCompany]
}

type Feature {
  id: ID! 
  name: String!
  description: String
  created_at: Float
  updated_at: Float
  deleted: Boolean
}


type InternalBusinessCategory {
  id: ID! 
  name: String!
  description: String
  created_at: Float
  updated_at: Float
  deleted: Boolean
}

type Manufacturer {
    id: ID!
    name: String!
    created_at: Float
    updated_at: Float
    isTemporary: Boolean
    last_modified: Float
    server_created_at: Float
    deleted: Boolean!
}

type MeasurementUnit {
    id: ID!
    name: String!
    symbol: String!
    created_at: Float
    updated_at: Float
    last_modified: Float
    server_created_at: Float
    deleted: Boolean!
}

type Permission {
  id: ID! 
  name: String!
  description: String
  created_at: Float
  updated_at: Float
  deleted: Boolean
}

type Product {
    id: ID!
    name: String!
    description: String
    summary: String
    barCode: String
    manufacturer: Manufacturer 
    brand: Brand
    productCategory: ProductCategory
    productSegment: ProductSegment
    measuerementUnit: MeasurementUnit
    weight: Float
    image: String
    isTemporary: Boolean
    adminLastModifiedBy: String
    lastModifiedBy: User
    created_at: Float
    updated_at: Float
    last_modified: Float
    server_created_at: Float
    deleted: Boolean!
}


type ProductCategory {
    id: ID!
    name: String!
    summary: String
    parentId: ID
    measurementUnitId: ID
    created_at: Float
    updated_at: Float
    last_modified: Float
    server_created_at: Float
    deleted: Boolean!
}


type ProductDescription {
  id: ID! 
  name: String!
  summary: String
  created_at: Float
  updated_at: Float
  last_modified: Float
  server_created_at: Float
  deleted: Boolean
}

type ProductSegment {
  id: ID! 
  name: String!
  description: String
  created_at: Float
  updated_at: Float
  last_modified: Float
  server_created_at: Float
  deleted: Boolean
}

type ProductSegmentEntry {
  id: ID! 
  name: String!
  product_segments: ProductSegment
  created_at: Float
  updated_at: Float
  last_modified: Float
  server_created_at: Float
  deleted: Boolean
}

type ProductCategoryProductSegment {
  product_categories: ProductCategory
  product_segments: ProductSegment
  created_at: Float
  updated_at: Float
  deleted: Boolean
}



type Role {
    id: ID! 
    name: String!
    description: String
    created_at: Float
    updated_at: Float
    deleted: Boolean
}

type Subscription {
    id: ID! 
    name: String!
    description: String
    numberOfBranches: Float
    created_at: Float
    updated_at: Float
    deleted: Boolean
    companies: [Company!]
}

type User {
    userId: ID! 
    email: String!
    password: String!
    firstName: String!
    otherNames: String
    phone: String!
    username: String
    geneder: String
    whatsAppPhone: String
    status: String
    otp: String
    isCustomerCarePersonnel: Boolean
    server_created_at: Float
    last_modified: Float
    isSupervisor: Boolean
    adminLastModifiedBy: String
    lastModifiedBy: String
    country: String
    languagesSpoken: String
    logins: Float
    lastLogin: Float
    isRecruiter: Boolean
    created_at: Float
    updated_at: Float
    deleted: Boolean
}




